{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darkp\\\\pepHackathon\\\\pephackathon\\\\src\\\\DisplayFunction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DisplayFunction(props) {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  let wholeData = [];\n\n  const tempFunc = () => {\n    return new Promise(resolve => {\n      Axios.get(\"http://localhost:3001/profile\", {\n        params: {\n          name: i.name\n        }\n      }).then(response => {\n        profileData[useName] = [];\n\n        for (let i = 0; i < response.data.length; i++) {\n          profileData[useName].push(response.data[i]);\n        }\n\n        resolve(profileData);\n      });\n    });\n  };\n\n  const myfunct = async () => {\n    await Axios.get(\"http://localhost:3001/search\", {\n      params: {\n        name: props.str\n      }\n    }).then(response => {\n      response.data.map(async i => {\n        let profileData = {};\n        let useName = i.name;\n        let temp = await tempFunc();\n        wholeData.push(profileData);\n      });\n      setToggle(true);\n    });\n    console.log(wholeData);\n    console.log(wholeData.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"displayFunction\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \"Display Function\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: myfunct,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), toggle ? wholeData.map((val, index) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: wholeData[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Empty\"\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayFunction, \"ZIrxLPKhJd8BF8Qgy6ZaBI9cjEI=\");\n\n_c = DisplayFunction;\nexport default DisplayFunction;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayFunction\");","map":{"version":3,"sources":["C:/Users/darkp/pepHackathon/pephackathon/src/DisplayFunction.js"],"names":["React","useState","Axios","DisplayFunction","props","toggle","setToggle","wholeData","tempFunc","Promise","resolve","get","params","name","i","then","response","profileData","useName","data","length","push","myfunct","str","map","temp","console","log","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;AAGA,MAAIM,SAAS,GAAG,EAAhB;;AACA,QAAMC,QAAQ,GAAE,MAAI;AAChB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAW;AAC1BR,MAAAA,KAAK,CAACS,GAAN,CAAU,+BAAV,EAA0C;AAACC,QAAAA,MAAM,EAAC;AAACC,UAAAA,IAAI,EAACC,CAAC,CAACD;AAAR;AAAR,OAA1C,EAAkEE,IAAlE,CAAwEC,QAAD,IAAY;AAC3EC,QAAAA,WAAW,CAACC,OAAD,CAAX,GAAuB,EAAvB;;AACA,aAAI,IAAIJ,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACE,QAAQ,CAACG,IAAT,CAAcC,MAA7B,EAAoCN,CAAC,EAArC,EAAwC;AACpCG,UAAAA,WAAW,CAACC,OAAD,CAAX,CAAqBG,IAArB,CAA0BL,QAAQ,CAACG,IAAT,CAAcL,CAAd,CAA1B;AACH;;AACDJ,QAAAA,OAAO,CAACO,WAAD,CAAP;AACP,OAND;AAOH,KARM,CAAP;AASH,GAVD;;AAWA,QAAMK,OAAO,GAAG,YAAW;AACvB,UAAMpB,KAAK,CAACS,GAAN,CAAU,8BAAV,EAAyC;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAGT,KAAK,CAACmB;AAAd;AAAT,KAAzC,EAAuER,IAAvE,CAA6EC,QAAD,IAAY;AAC1FA,MAAAA,QAAQ,CAACG,IAAT,CAAcK,GAAd,CAAkB,MAAOV,CAAP,IAAW;AACzB,YAAIG,WAAW,GAAG,EAAlB;AACA,YAAIC,OAAO,GAAGJ,CAAC,CAACD,IAAhB;AACA,YAAIY,IAAI,GAAG,MAAMjB,QAAQ,EAAzB;AACAD,QAAAA,SAAS,CAACc,IAAV,CAAeJ,WAAf;AACH,OALD;AAMAX,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KARK,CAAN;AASAoB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAS,CAACa,MAAtB;AACH,GAZD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,mCAGI;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAMKjB,MAAM,GACCE,SAAS,CAACiB,GAAV,CAAc,CAACI,GAAD,EAAKC,KAAL,KAAa;AACvB,0BACI;AAAA,kBACCtB,SAAS,CAACsB,KAAD,CAAT,CAAiBhB;AADlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,CADD,gBASK;AAAA;AAAA,qBAfhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAzDQV,e;;KAAAA,e;AA2DT,eAAeA,eAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport Axios from \"axios\"\r\n\r\n\r\n\r\nfunction DisplayFunction(props) {\r\n\r\n    const [toggle,setToggle] = useState(false);\r\n\r\n\r\n    let wholeData = [];\r\n    const tempFunc =()=>{\r\n        return new Promise((resolve)=>{\r\n            Axios.get(\"http://localhost:3001/profile\",{params:{name:i.name}}).then((response)=>{\r\n                    profileData[useName] = [];\r\n                    for(let i =0;i<response.data.length;i++){\r\n                        profileData[useName].push(response.data[i]);\r\n                    }\r\n                    resolve(profileData)\r\n            })\r\n        })\r\n    }\r\n    const myfunct = async() => {\r\n        await Axios.get(\"http://localhost:3001/search\",{params: {name : props.str}}).then((response)=>{\r\n            response.data.map(async (i)=>{\r\n                let profileData = {};\r\n                let useName = i.name;\r\n                let temp = await tempFunc()\r\n                wholeData.push(profileData);\r\n            })\r\n            setToggle(true);\r\n        })\r\n        console.log(wholeData);\r\n        console.log(wholeData.length);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"displayFunction\">\r\n            <hr />\r\n            Display Function\r\n            <button onClick={myfunct}>\r\n                click me \r\n            </button>\r\n            {toggle ? (\r\n                    wholeData.map((val,index)=>{\r\n                        return(\r\n                            <h1>\r\n                            {wholeData[index].name}\r\n                            </h1>\r\n                        )\r\n                        \r\n                    })) : (\r\n                        <>\r\n                        Empty\r\n                        </>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayFunction\r\n"]},"metadata":{},"sourceType":"module"}