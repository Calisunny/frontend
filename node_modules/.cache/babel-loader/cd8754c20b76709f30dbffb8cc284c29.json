{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darkp\\\\pepHackathon\\\\pephackathon\\\\src\\\\UpdateForm.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateForm extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.hide = () => {\n      var element = document.getElementById(\"UpdForm\");\n      element.classList.remove(\"visibleUpd\");\n      element.classList.add(\"hiddenUpd\");\n    };\n\n    this.send = operation => {\n      let curr = this.state;\n      let props = this.props; // console.log(curr.start,props.start);\n      // if (curr.start.parseInt >= curr.end.parseInt) {\n      //     window.alert(\"Invalid Start and End Time\");\n      //     return;\n      // }\n\n      function getCount() {\n        return new Promise(async resolve => {\n          await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\n            params: {\n              name: props.str,\n              starttime: curr.newStart,\n              endtime: props.end\n            }\n          }).then(async response => {\n            resolve(response.data);\n          }).catch(err => console.log(err));\n        });\n      }\n\n      let count = getCount();\n\n      if (count > 0) {\n        window.alert(\"Schedule is clashing\");\n        return;\n      }\n\n      if (operation === \"u\") {\n        let date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\n        console.log(props.name, \"2021-06-\" + props.date, props.start, curr.newStart, props.end, props.task, curr.newTask);\n        Axios.put(\"https://schedule-calender.herokuapp.com/update\", {\n          params: {\n            name: props.name,\n            date: \"2021-06-\" + props.date,\n            start: props.start,\n            newStart: curr.newStart,\n            end: props.end,\n            task: props.task,\n            newTask: curr.newTask\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      } else {\n        console.log(props, curr);\n        Axios.delete(\"https://schedule-calender.herokuapp.com/delete\", //delete\n        {\n          params: {\n            task: props.task,\n            name: props.name\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      }\n    };\n\n    this.state = {\n      newStart: \"\",\n      newTask: \"\"\n    };\n  }\n\n  render() {\n    // let curr = this.state;\n    let props = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"UpdForm\",\n        className: \"hiddenUpd\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m0\",\n          children: \"Update Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                newStart: e.target.value\n              }, () => {\n                console.log(e.target.value);\n              });\n            },\n            className: \"w m0\",\n            type: \"time\",\n            placeholder: props.start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                end: e.target.value\n              }, () => {\n                console.log(e.target.value);\n              });\n            },\n            className: \"w m0\",\n            type: \"time\",\n            placeholder: props.end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                newTask: e.target.value\n              }, () => {\n                console.log(e.target.value);\n              });\n            },\n            className: \"w m0\",\n            type: \"text\",\n            placeholder: props.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.send(\"u\"),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.send(\"d\"),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.hide(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UpdateForm; // Select * from teachers where name='hareesh' AND date LIKE '2021-06-22%' AND starttime LIKE '02:00%';\n//update teachers set starttime='09:00', endtime='10:00', task='DSA' WHERE name='hareesh' AND task='hindi' \n//SET SQL_SAFE_UPDATES = 0;","map":{"version":3,"sources":["C:/Users/darkp/pepHackathon/pephackathon/src/UpdateForm.js"],"names":["React","Component","Axios","UpdateForm","constructor","props","hide","element","document","getElementById","classList","remove","add","send","operation","curr","state","getCount","Promise","resolve","get","params","name","str","starttime","newStart","endtime","end","then","response","data","catch","err","console","log","count","window","alert","date","length","start","task","newTask","put","delete","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newStart: \"\",\r\n            newTask: \"\",\r\n        };\r\n    }\r\n    hide = () => {\r\n        var element = document.getElementById(\"UpdForm\");\r\n        element.classList.remove(\"visibleUpd\");\r\n        element.classList.add(\"hiddenUpd\");\r\n    };\r\n    send = (operation) => {\r\n        let curr = this.state;\r\n        let props = this.props;\r\n        // console.log(curr.start,props.start);\r\n        // if (curr.start.parseInt >= curr.end.parseInt) {\r\n        //     window.alert(\"Invalid Start and End Time\");\r\n        //     return;\r\n        // }\r\n        function getCount() {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/check\",\r\n                    {\r\n                        params: {\r\n                            name: props.str,\r\n                            starttime: curr.newStart,\r\n                            endtime: props.end,\r\n                        },\r\n                    }\r\n                ).then(async (response) => {\r\n                    resolve(response.data);\r\n                }).catch((err) => console.log(err));\r\n            });\r\n        }\r\n        let count = getCount();\r\n        if (count > 0) {\r\n            window.alert(\"Schedule is clashing\");\r\n            return;\r\n        }\r\n        if (operation === \"u\") {\r\n            let date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\r\n                console.log(props.name,\"2021-06-\" + props.date,props.start,curr.newStart,props.end,props.task,curr.newTask,)\r\n                Axios.put(\"https://schedule-calender.herokuapp.com/update\",\r\n                    {\r\n                        params: {\r\n                            name: props.name,\r\n                            date: \"2021-06-\" + props.date,\r\n                            start: props.start,\r\n                            newStart: curr.newStart,\r\n                            end: props.end,\r\n                            task: props.task,\r\n                            newTask: curr.newTask,\r\n                        }\r\n                    }\r\n                ).then((response) => {console.log(response)});\r\n        } else {\r\n            console.log(props , curr)\r\n            Axios.delete(\r\n                \"https://schedule-calender.herokuapp.com/delete\", //delete\r\n                {\r\n                    params: {\r\n                        task: props.task, name: props.name\r\n                    },\r\n                }\r\n            ).then((response) => {console.log(response);});\r\n        }\r\n    };\r\n    render() {\r\n        // let curr = this.state;\r\n        let props = this.props;\r\n        return (\r\n            <div>\r\n                <div id=\"UpdForm\" className=\"hiddenUpd\">\r\n                    <h1 className=\"m0\">Update Details</h1>\r\n                    <p className=\"m0\">Start Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState(\r\n                                    { newStart: e.target.value },\r\n                                    () => {\r\n                                        console.log(e.target.value);\r\n                                    }\r\n                                );\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder={props.start}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">End Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ end: e.target.value }, () => {\r\n                                    console.log(e.target.value);\r\n                                });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder={props.end}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">Task</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState(\r\n                                    { newTask: e.target.value },\r\n                                    () => {\r\n                                        console.log(e.target.value);\r\n                                    }\r\n                                );\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"text\"\r\n                            placeholder={props.task}\r\n                        />\r\n                    </div>\r\n                    <div className=\"formButtons\">\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"u\")}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"d\")}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.hide()}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateForm;\r\n\r\n\r\n// Select * from teachers where name='hareesh' AND date LIKE '2021-06-22%' AND starttime LIKE '02:00%';\r\n\r\n//update teachers set starttime='09:00', endtime='10:00', task='DSA' WHERE name='hareesh' AND task='hindi' \r\n\r\n//SET SQL_SAFE_UPDATES = 0;"]},"metadata":{},"sourceType":"module"}