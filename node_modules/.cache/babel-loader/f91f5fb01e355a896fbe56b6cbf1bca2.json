{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darkp\\\\pepHackathon\\\\pephackathon\\\\src\\\\UpdateForm.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateForm extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.hide = () => {\n      var element = document.getElementById(\"UpdForm\");\n      element.classList.remove(\"visibleUpd\");\n      element.classList.add(\"hiddenUpd\");\n    };\n\n    this.send = operation => {\n      let curr = this.state;\n      let props = this.props;\n\n      if (curr.start.parseInt >= curr.end.parseInt) {\n        window.alert(\"Invalid Start and End Time\");\n        return;\n      }\n\n      function getCount() {\n        return new Promise(async resolve => {\n          await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\n            params: {\n              name: props.str,\n              starttime: curr.newStart,\n              endtime: curr.end\n            }\n          }).then(async response => {\n            resolve(response.data);\n          }).catch(err => console.log(err));\n        });\n      }\n\n      let count = getCount();\n\n      if (count > 0) {\n        window.alert(\"Schedule is clashing\");\n        return;\n      }\n\n      if (operation === \"u\") {\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\", //update\n        {\n          params: {\n            name: curr.name,\n            date: \"2021-06-\" + curr.date,\n            start: curr.newStart,\n            end: curr.end,\n            task: curr.task\n          }\n        }).then(response => {\n          window.location.reload();\n        });\n      } else {\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\", //delete\n        {\n          params: {\n            name: curr.name,\n            date: \"2021-06-\" + props.date,\n            start: curr.newStart,\n            end: curr.end,\n            task: curr.task\n          }\n        }).then(response => {\n          window.location.reload();\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      date: \"\",\n      start: \"\",\n      newStart: \"\",\n      end: \"\",\n      task: \"\"\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      name: props.name,\n      date: props.date,\n      start: props.start,\n      end: props.end,\n      task: props.task\n    };\n  }\n\n  render() {\n    let curr = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"UpdForm\",\n        className: \"hiddenUpd\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m0\",\n          children: \"Update Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                start: e.target.value\n              });\n            },\n            className: \"w m0\",\n            type: \"time\",\n            placeholder: \"02:00\",\n            value: curr.start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                end: e.target.value\n              });\n            },\n            className: \"w m0\",\n            type: \"time\",\n            placeholder: \"03:00\",\n            value: curr.end\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m0\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              this.setState({\n                task: e.target.value\n              });\n            },\n            className: \"w m0\",\n            type: \"text\",\n            placeholder: \"Subject\",\n            value: curr.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.send(\"u\"),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.send(\"d\"),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formButton\",\n            onClick: () => this.hide(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UpdateForm;","map":{"version":3,"sources":["C:/Users/darkp/pepHackathon/pephackathon/src/UpdateForm.js"],"names":["React","Component","Axios","UpdateForm","constructor","props","hide","element","document","getElementById","classList","remove","add","send","operation","curr","state","start","parseInt","end","window","alert","getCount","Promise","resolve","get","params","name","str","starttime","newStart","endtime","then","response","data","catch","err","console","log","count","post","date","task","location","reload","getDerivedStateFromProps","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            date: \"\",\r\n            start: \"\",\r\n            newStart: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        };\r\n    }\r\n    hide = () => {\r\n        var element = document.getElementById(\"UpdForm\");\r\n        element.classList.remove(\"visibleUpd\");\r\n        element.classList.add(\"hiddenUpd\");\r\n    };\r\n    send = (operation) => {\r\n        let curr = this.state;\r\n        let props = this.props;\r\n        if (curr.start.parseInt >= curr.end.parseInt) {\r\n            window.alert(\"Invalid Start and End Time\");\r\n            return;\r\n        }\r\n        function getCount() {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/check\",\r\n                    {\r\n                        params: {\r\n                            name: props.str,\r\n                            starttime: curr.newStart,\r\n                            endtime: curr.end,\r\n                        },\r\n                    }\r\n                )\r\n                    .then(async (response) => {\r\n                        resolve(response.data);\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            });\r\n        }\r\n        let count = getCount();\r\n        if (count > 0) {\r\n            window.alert(\"Schedule is clashing\");\r\n            return;\r\n        }\r\n        if (operation === \"u\") {\r\n            Axios.post(\r\n                \"https://schedule-calender.herokuapp.com/insert\", //update\r\n                {\r\n                    params: {\r\n                        name: curr.name,\r\n                        date: \"2021-06-\" + curr.date,\r\n                        start: curr.newStart,\r\n                        end: curr.end,\r\n                        task: curr.task,\r\n                    },\r\n                }\r\n            ).then((response) => {\r\n                window.location.reload();\r\n            });\r\n        } else {\r\n            Axios.post(\r\n                \"https://schedule-calender.herokuapp.com/insert\", //delete\r\n                {\r\n                    params: {\r\n                        name: curr.name,\r\n                        date: \"2021-06-\" + props.date,\r\n                        start: curr.newStart,\r\n                        end: curr.end,\r\n                        task: curr.task,\r\n                    },\r\n                }\r\n            ).then((response) => {\r\n                window.location.reload();\r\n            });\r\n        }\r\n    };\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {\r\n            name: props.name,\r\n            date: props.date,\r\n            start: props.start,\r\n            end: props.end,\r\n            task: props.task,\r\n        };\r\n    }\r\n    render() {\r\n        let curr = this.state;\r\n        return (\r\n            <div>\r\n                <div id=\"UpdForm\" className=\"hiddenUpd\">\r\n                    <h1 className=\"m0\">Update Details</h1>\r\n                    <p className=\"m0\">Start Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ start: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"02:00\"\r\n                            value={curr.start}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">End Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ end: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"03:00\"\r\n                            value={curr.end}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">Task</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ task: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"text\"\r\n                            placeholder=\"Subject\"\r\n                            value={curr.task}\r\n                        />\r\n                    </div>\r\n                    <div className=\"formButtons\">\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"u\")}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"d\")}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.hide()}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateForm;\r\n"]},"metadata":{},"sourceType":"module"}