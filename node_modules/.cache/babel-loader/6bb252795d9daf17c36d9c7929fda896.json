{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darkp\\\\pepHackathon\\\\pephackathon\\\\src\\\\Day.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: [],\n      date: \"0\",\n      toggle: \"\"\n    };\n    this.getData = this.getData.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.date + \"\" === \"\") return {};\n    return {\n      date: props.date + \"\"\n    };\n  }\n\n  shouldComponentUpdate(props, state) {\n    if (props.toggle !== state.toggle) return true;\n    if (props.view !== \"Day\" || props.date + \"\" === \"\") return false;\n    return true;\n  }\n\n  componentDidUpdate(props, state) {\n    console.log(props.toggle, state.toggle);\n\n    if (props.toggle === state.toggle) {\n      this.getData();\n      return;\n    }\n\n    if (props.date + \"\" === state.date) return; // if (props.toggle === this.state.toggle ) return;\n\n    this.getData();\n  }\n\n  async getData() {\n    console.log(\"c\");\n    const str = this.props.str;\n    let date = this.state.date;\n    date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\n    let dbdata = [];\n\n    function getName(str) {\n      return new Promise(async resolve => {\n        await Axios.get(\"https://schedule-calender.herokuapp.com/data\", {\n          params: {\n            name: str,\n            date: date\n          }\n        }).then(async response => {\n          let data = response.data;\n\n          for (let i = 0; i < data.length; i++) {\n            dbdata.push(data[i]);\n          }\n\n          resolve(dbdata);\n        });\n      });\n    }\n\n    let data = await getName(str);\n    this.setState({\n      show: data,\n      date: this.props.date + \"\"\n    });\n  }\n\n  render() {\n    const curr = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dayResults\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), curr.show.map((obj, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range\",\n          children: [obj.starttime.substring(0, 5), \" -\", obj.endtime.substring(0, 5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: obj.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n}\n\nexport default Day;","map":{"version":3,"sources":["C:/Users/darkp/pepHackathon/pephackathon/src/Day.js"],"names":["React","Component","Axios","Day","constructor","props","state","show","date","toggle","getData","bind","getDerivedStateFromProps","shouldComponentUpdate","view","componentDidUpdate","console","log","str","length","dbdata","getName","Promise","resolve","get","params","name","then","response","data","i","push","setState","render","curr","map","obj","ind","starttime","substring","endtime","task","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nclass Day extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: [],\r\n            date: \"0\",\r\n            toggle: \"\",\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.date + \"\" === \"\") return {};\r\n        return { date: props.date + \"\"};\r\n    }\r\n    shouldComponentUpdate(props,state) {\r\n        if(props.toggle !== state.toggle) return true;\r\n        if (props.view !== \"Day\" || props.date + \"\" === \"\") return false;\r\n        return true;\r\n    }\r\n    componentDidUpdate(props,state) {\r\n        console.log(props.toggle,state.toggle)\r\n        if(props.toggle === state.toggle){\r\n            this.getData(); return;\r\n        }\r\n        if (props.date + \"\" === state.date ) return;\r\n        // if (props.toggle === this.state.toggle ) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        console.log(\"c\");\r\n        const str = this.props.str;\r\n        let date = this.state.date;\r\n        date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\r\n        let dbdata = [];\r\n        function getName(str) {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/data\",\r\n                    {\r\n                        params: { name: str, date: date },\r\n                    }\r\n                ).then(async (response) => {\r\n                    let data = response.data;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        dbdata.push(data[i]);\r\n                    }\r\n                    resolve(dbdata);\r\n                });\r\n            });\r\n        }\r\n        let data = await getName(str);\r\n        this.setState({ show: data, date: this.props.date + \"\" });\r\n    }\r\n    render() {\r\n        const curr = this.state;\r\n        return (\r\n            <div className=\"dayResults\">\r\n                <br />\r\n                {curr.show.map((obj, ind) => (\r\n                    <div className=\"data\" key={ind}>\r\n                        <div className=\"range\">\r\n                            {obj.starttime.substring(0, 5)} -\r\n                            {obj.endtime.substring(0, 5)}\r\n                        </div>\r\n                        <div className=\"task\">{obj.task}</div>\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n}\r\n\r\nexport default Day;\r\n"]},"metadata":{},"sourceType":"module"}