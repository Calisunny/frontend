{"version":3,"sources":["Form.js","Day.js","Week.js","Month.js","AddData.js","Topbar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","send","curr","state","start","parseInt","end","window","alert","Promise","resolve","a","Axios","get","params","name","starttime","endtime","then","response","data","post","date","task","location","reload","hide","element","document","getElementById","classList","remove","add","id","className","onChange","e","setState","target","value","type","placeholder","onClick","Component","Day","show","getData","bind","view","this","getName","str","i","length","dbdata","push","map","obj","ind","substring","Week","weekDays","startDay","weekInfo","day","currday","weekStart","daydata","index","undefined","Fragment","Month","monthInfo","days","AddData","makeVisible","catch","err","console","log","alt","src","Topbar","changeView","changeVal","max","enter","back","min","textChange","App","display","chosen","profiledata","useName","res","names","shift","k","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae3d3bec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./DisplayTeacher.css\";\r\nimport Axios from \"axios\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            date: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        };\r\n    }\r\n    send = () => {\r\n        let curr= this.state;\r\n        if((curr.start).parseInt >= (curr.end).parseInt){\r\n            window.alert(\"Invalid Start and End Time\");\r\n            return;\r\n        }\r\n        function getCount(){\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\r\n                    params:{name: curr.name ,starttime : curr.start,endtime : curr.end},\r\n                }).then(async (response) => {\r\n                    resolve(response.data);\r\n                });\r\n            })\r\n        }\r\n        let count = getCount();\r\n        if(count > 0){\r\n            window.alert(\"Schedule is clashing\"); \r\n            return;\r\n        }\r\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\",\r\n            {params:{name: curr.name, date:curr.date, start: curr.start,\r\n                end: curr.end, task: curr.task}}\r\n        ).then((response)=>{\r\n            window.location.reload();\r\n        });\r\n    }\r\n    hide = () => {\r\n        var element = document.getElementById(\"Form\");\r\n        element.classList.remove(\"visibleForm\");\r\n        element.classList.add(\"hiddenForm\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Form\" className=\"hiddenForm\">\r\n                <h1 className=\"m0\">Add Details</h1>\r\n                <p className=\"m0\">Enter teacher's name</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ name: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"text\"\r\n                        placeholder=\"Tony Stark\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Date</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ date: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"date\"\r\n                        placeholder=\"Month-Day\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Start Time</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ start: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"time\"\r\n                        placeholder=\"02:00\"\r\n                        \r\n                    />\r\n                </div>\r\n                <p className=\"m0\">End Time</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ end: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"time\"\r\n                        placeholder=\"03:00\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Task</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ task: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"text\"\r\n                        placeholder=\"Subject\"\r\n                    />\r\n                </div>\r\n                <div className=\"formButtons\">\r\n                    <button className=\"formButton\" onClick={() => this.send()}>\r\n                        Add Schedule\r\n                    </button>\r\n                    <button\r\n                        className=\"formButton\"\r\n                        onClick={()=> this.hide()}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nclass Day extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: [],\r\n            date: \"1\",\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.date + \"\" === \"\") return {};\r\n        return { date: props.date + \"\" };\r\n    }\r\n    shouldComponentUpdate(props) {\r\n        if (props.view !== \"Day\" || props.date + \"\" === \"\") return false;\r\n        return true;\r\n    }\r\n    componentDidUpdate(props) {\r\n        if (props.date + \"\" === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        const str = this.props.str;\r\n        let date = this.state.date;\r\n        date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\r\n        let dbdata = [];\r\n        function getName(str) {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/data\",\r\n                    {\r\n                        params: { name: str, date: date },\r\n                    }\r\n                ).then(async (response) => {\r\n                    let data = response.data;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        dbdata.push(data[i]);\r\n                    }\r\n                    resolve(dbdata);\r\n                });\r\n            });\r\n        }\r\n        let data = await getName(str);\r\n        this.setState({ show: data, date: this.props.date + \"\" });\r\n    }\r\n    render() {\r\n        const curr = this.state;\r\n        return (\r\n            <div className=\"dayResults\">\r\n                <br />\r\n                {curr.show.map((obj, ind) => (\r\n                    <div className=\"data\" key={ind}>\r\n                        <div className=\"range\">\r\n                            {obj.starttime.substring(0, 5)} -\r\n                            {obj.endtime.substring(0, 5)}\r\n                        </div>\r\n                        <div className=\"task\">{obj.task}</div>\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n}\r\n\r\nexport default Day;\r\n","import React, { Component } from 'react';\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nclass Week extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            weekDays: [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THURS\",\"FRI\",\"SAT\"],\r\n            show: [],\r\n            startDay: -1,\r\n            date: 1\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.date+\"\"===\"\") return ({});\r\n        return ({date : props.date});          \r\n    }\r\n    shouldComponentUpdate(props){\r\n        if(props.view !== \"Week\" || props.date+\"\"===\"\") return false;\r\n        return true;\r\n    }\r\n    componentDidUpdate(props){\r\n        if(props.date === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        const curr= this.state;\r\n        const name = this.props.str;\r\n        const weekStart= curr.startDay + curr.date * 7;\r\n        let dbdata = [];\r\n        function weekInfo(str,day) {\r\n            return new Promise(async (resolve) => {\r\n                if(day < 1 || day > 30){\r\n                    resolve([]);\r\n                }\r\n                day= day+\"\";\r\n                let date= \"2021-06-\" + (day.length === 1 ? \"0\" + day : day);\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/data\", {\r\n                    params: {name : str, date : date},\r\n                }).then(async (response) => {\r\n                    let currday= response.data;\r\n                    resolve(currday);\r\n                });\r\n            });\r\n        }\r\n        for(let i=weekStart; i<weekStart+7; i++){\r\n            let daydata = await weekInfo(name,i);\r\n            dbdata.push(daydata);\r\n        }\r\n        this.setState({show : dbdata});\r\n    }\r\n    render() {\r\n        const curr= this.state;\r\n        let i=0;\r\n        return (\r\n            <div className=\"WeekParent\">\r\n                {\r\n                    curr.show.map((day,ind)=>(\r\n                    <div className=\"WeekDayParent\">\r\n                        <div key={ind} className={(i===0||i===6) ? \"Wday Wend\" : \"Wday\"}>\r\n                            {curr.weekDays[i++]}\r\n                        </div>\r\n                        \r\n                        <div className= \"data data-week\">\r\n                            {\r\n                                day.map((obj,index)=>(\r\n                                    obj.task===undefined ? (<React.Fragment/>) :\r\n                                (\r\n                                <div className=\"dataContainer\" key={index}>\r\n                                    <div className=\"range\">\r\n                                        {obj.starttime.substring(0, 5)} -\r\n                                        {obj.endtime.substring(0, 5)}\r\n                                    </div>\r\n                                     <div className=\"task\">{obj.task}</div>\r\n                                </div>\r\n                                )\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Week\r\n","import React, { Component } from 'react'; \r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nclass Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show: [],\r\n        }\r\n    }\r\n    shouldComponentUpdate(props){\r\n        if(props.view !== \"Month\") return false;\r\n        return true;\r\n    }\r\n    componentDidUpdate(props){\r\n        if(props.date === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        const name = this.props.str;\r\n        let dbdata = [];\r\n        function monthInfo(str,day) {\r\n            let daydata= [];\r\n            return new Promise(async (resolve) => {\r\n                day= day+\"\";\r\n                let date= \"2021-06-\" + (day.length === 1 ? \"0\" + day : day);\r\n                daydata.push(date);\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/data\", {\r\n                    params: {name : str, date : date},\r\n                }).then(async (response) => {\r\n                     let currday= response.data;\r\n                    for (let i = 0; i < currday.length; i++) {\r\n                        daydata.push(currday[i]);\r\n                    }\r\n                    resolve(daydata);\r\n                });\r\n            });\r\n        }\r\n        for(let i=1; i<=30; i++){\r\n            let daydata= await monthInfo(name,i);\r\n            dbdata.push(daydata);\r\n        }\r\n        this.setState({show : dbdata});\r\n    }\r\n    render() {\r\n        let days= [];\r\n        let show= this.state.show;\r\n        for(let i=1; i<=30; i++){\r\n           days.push(\"June \"+{i});\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    show.map((day,ind)=>(\r\n                        <div key={ind} className=\"Mbox\">\r\n                            <div className=\"bigText\" key={ind}>\r\n                                {days[ind]}\r\n                            </div>\r\n                            <div className= \"data\">\r\n                            {\r\n                                day.map((obj,index)=>(\r\n                                obj.task===undefined ? (<React.Fragment/>) :\r\n                                (\r\n                                    <div key={index}>\r\n                                        <div className=\"range\">\r\n                                            {obj.starttime.substring(0, 5)} -\r\n                                            {obj.endtime.substring(0, 5)}\r\n                                        </div>\r\n                                                <div className=\"task\">{obj.task}</div>\r\n                                            </div>\r\n                                        )\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Month\r\n","import React, { Component } from 'react'\r\nimport \"./DisplayTeacher.css\"\r\nimport Axios from \"axios\";\r\n\r\nclass AddData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        }\r\n    }\r\n    makeVisible = (e) => {\r\n        let element = document.getElementById(\"Form\");\r\n        element.classList.add(\"visibleForm\");\r\n        element.classList.remove(\"hiddenForm\");\r\n    }\r\n    hide = () => {\r\n        var element = document.getElementById(\"Form\");\r\n        element.classList.remove(\"visibleForm\");\r\n        element.classList.add(\"hiddenForm\");\r\n    }\r\n    send = () => {\r\n        let curr= this.state;\r\n        let props= this.props;\r\n        if((curr.start).parseInt >= (curr.end).parseInt){\r\n            window.alert(\"Invalid Start and End Time\");\r\n            return;\r\n        }\r\n        function getCount(){\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\r\n                    params:{name: props.str ,starttime : curr.start,endtime : curr.end},\r\n                }).then(async (response) => {\r\n                    resolve(response.data);\r\n                }).catch((err)=>console.log(err));\r\n            })\r\n        }\r\n        let count = getCount();\r\n        if(count > 0){\r\n            window.alert(\"Schedule is clashing\"); \r\n            return;\r\n        }\r\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\",\r\n            {params:{name: props.str, date: \"2021-06-\"+props.date, start: curr.start,\r\n                end: curr.end, task: curr.task}}\r\n        ).then((response)=>{\r\n            window.location.reload();\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div  id=\"Form\" className=\"hiddenForm\">\r\n                    <h1 className=\"m0\">Add Details</h1> \r\n                    <p className=\"m0\">Start Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ start: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"02:00\"\r\n                            \r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">End Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ end: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"03:00\"\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">Task</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ task: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"text\"\r\n                            placeholder=\"Subject\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"formButtons\">\r\n                        <button className=\"formButton\" onClick={() => this.send()}>\r\n                            Add Schedule\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={()=> this.hide()}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                className=\"createInside\"\r\n                onClick={() => this.makeVisible()}\r\n                >\r\n                <img alt=\"add\"\r\n                src=\"https://www.gstatic.com/images/icons/material/colored_icons/1x/create_32dp.png\"\r\n                />\r\n                <p>CREATE</p>\r\n            </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddData\r\n\r\n","import Day from \"./Day\";\r\nimport Week from \"./Week\";\r\nimport Month from \"./Month\";\r\nimport AddData from \"./AddData\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Topbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            view: \"Day\",\r\n            date: 1,\r\n        };\r\n    }\r\n    changeView = (e) => {\r\n        this.setState({view: e.target.value});\r\n    }\r\n    changeVal = (e) => {\r\n        if(this.state.view===\"Week\" && \r\n        (e.target.value < 0 || e.target.value > 5)) return;\r\n        if(e.target.value < 0 || e.target.value > 30) return;\r\n        this.setState({date: e.target.value});\r\n    }\r\n    render() {\r\n        const curr = this.state;\r\n        let max= 30;\r\n        let view = <Day str={this.props.str} date={curr.date} view={curr.view}/>;\r\n        if (curr.view === \"Week\") {\r\n            view = <Week str={this.props.str} date={curr.date} view={curr.view}/>;\r\n            max= 5;\r\n        } else if (curr.view === \"Month\") {\r\n            view = <Month str={this.props.str}  view={curr.view}/>;\r\n        }\r\n        return this.props.enter ? (\r\n            <React.Fragment>\r\n                <div className=\"header2\">\r\n                    <button className=\"back\" onClick={this.props.back}>\r\n                        <i className=\"fas fa-caret-left backpadding\"></i>BACK\r\n                    </button>\r\n                    <input\r\n                        onChange={(e) => this.changeVal(e)}\r\n                        type=\"number\"\r\n                        id=\"vol\"\r\n                        value= {curr.date}\r\n                        min= {0}\r\n                        max= {max}\r\n                        className=\"midInput\"\r\n                    />\r\n                    <select\r\n                        className=\"viewType\"\r\n                        onChange={(e)=>this.changeView(e)}\r\n                    >\r\n                        <option type=\"1\"> Day </option>\r\n                        <option type=\"2\"> Week </option>\r\n                        <option type=\"3\"> Month </option>\r\n                    </select>\r\n                </div>\r\n                {view}\r\n                <AddData date={curr.date}  str={this.props.str}/>\r\n            </React.Fragment>\r\n        ) : (\r\n            <div className=\"header\">\r\n                <div className=\"headerFont\">\r\n                    <div className=\"oneLine\">\r\n                        <input\r\n                            placeholder=\"🔎 Search Teacher\"\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            onChange={(e) => this.props.textChange(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nimport Topbar from \"./Topbar\";\nimport \"./DisplayTeacher.css\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: [],\n            display: \"\",\n            enter: false,\n            chosen: \"\",\n        };\n        this.getData = this.getData.bind(this);\n    }\n    textChange = (e) => {\n        this.setState({ display: e.target.value }, () => {\n            this.getData();\n        });\n    };\n    enter = (e) => {\n        this.setState({ enter: true, chosen: e.target.id });\n    };\n    back = () => {\n        window.location.reload();\n    };\n    makeVisible = (e) => {\n        var element = document.getElementById(\"Form\");\n        element.classList.add(\"visibleForm\");\n        element.classList.remove(\"hiddenForm\");\n    };\n    async getData() {\n        let name = this.state.display;\n        let dbdata = [];\n        function getName(str) {\n            return new Promise(async (resolve) => {\n                await Axios.get(\n                    \"https://schedule-calender.herokuapp.com/search\",\n                    {\n                        params: { name: str },\n                    }\n                ).then(async (response) => {\n                    for (let i = 0; i < response.data.length; i++) {\n                        let profiledata = await getData(response.data[i].name);\n                        dbdata.push(profiledata);\n                    }\n                    resolve(dbdata);\n                });\n            });\n        }\n        const getData = (useName) => {\n            return new Promise(async (resolve) => {\n                let profiledata = [];\n                profiledata.push(useName);\n                await Axios.get(\n                    \"https://schedule-calender.herokuapp.com/profile\",\n                    {\n                        params: { name: useName },\n                    }\n                ).then((res) => {\n                    const data = res.data;\n                    for (let i = 0; i < data.length; i++) {\n                        profiledata.push(data[i]);\n                    }\n                    resolve(profiledata);\n                });\n            });\n        };\n        let data = await getName(name);\n        this.setState({ show: data });\n    }\n    render() {\n        let curr = this.state;\n        let names = [];\n        for (let i = 0; i < curr.show.length; i++)\n            names.push(curr.show[i].shift());\n        let k = 0;\n        if (curr.enter) {\n            return (\n                <div>\n                    <Topbar\n                        textChange={this.textChange}\n                        back={() => this.back()}\n                        enter={curr.enter}\n                        str={curr.chosen}\n                    />\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Topbar textChange={this.textChange} enter={curr.enter} />\n                <div className=\"teacherParent\">\n                    {curr.show.map((data, index) => (\n                        <div\n                            className=\"teacherContainer\"\n                            key={index}\n                            onClick={(e) => this.enter(e)}\n                        >\n                            <div className=\"bigText\" key={index}>\n                                <h2 id={names[k]}>{names[k++]}</h2>\n                            </div>\n                            {data.map((obj, index) => (\n                                <div\n                                    className=\"data\"\n                                    key={index}\n                                    id={names[k - 1]}\n                                >\n                                    <div className=\"date\" id={names[k - 1]}>\n                                        {obj.date.substring(5, 10)}\n                                    </div>\n                                    <div className=\"range\" id={names[k - 1]}>\n                                        {obj.starttime.substring(0, 5)} -\n                                        {obj.endtime.substring(0, 5)}\n                                    </div>\n                                    <div className=\"task\" id={names[k - 1]}>\n                                        {obj.task}\n                                    </div>\n                                </div>\n                            ))}\n                            <div className=\"needPading\"></div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"create\">\n                    <Form str={curr.display} />\n                    <button\n                        className=\"createInside\"\n                        onClick={(e) => this.makeVisible(e)}\n                    >\n                        <img\n                            alt=\"add\"\n                            src=\"https://www.gstatic.com/images/icons/material/colored_icons/1x/create_32dp.png\"\n                        />\n                        <p>CREATE</p>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getData();\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\nexport default reportWebVitals;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}