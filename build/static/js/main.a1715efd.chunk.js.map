{"version":3,"sources":["Form.js","UpdateForm.js","Day.js","Week.js","Month.js","AddData.js","Topbar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","send","curr","state","start","parseInt","end","window","alert","Promise","resolve","a","Axios","get","params","name","starttime","endtime","then","response","data","post","date","task","location","reload","hide","element","document","getElementById","classList","remove","add","id","className","onChange","e","setState","target","value","type","placeholder","onClick","Component","UpdateForm","operation","str","newStart","catch","err","console","log","put","newTask","delete","this","Day","makeVisible","detailsForUpdate","obj","substring","show","getData","bind","view","getName","i","length","dbdata","push","map","ind","Week","weekDays","startDay","weekInfo","day","currday","weekStart","daydata","index","undefined","Fragment","Month","monthInfo","days","AddData","alt","src","Topbar","changeView","ele","style","display","changeVal","max","enter","back","min","textChange","App","enterTeacher","chosen","personData","profiledata","useName","res","names","shift","k","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a1715efd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./DisplayTeacher.css\";\r\nimport Axios from \"axios\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            date: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        };\r\n    }\r\n    send = () => {\r\n        let curr= this.state;\r\n        if((curr.start).parseInt >= (curr.end).parseInt){\r\n            window.alert(\"Invalid Start and End Time\");\r\n            return;\r\n        }\r\n        function getCount(){\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\r\n                    params:{name: curr.name ,starttime : curr.start,endtime : curr.end},\r\n                }).then(async (response) => {\r\n                    resolve(response.data);\r\n                });\r\n            })\r\n        }\r\n        let count = getCount();\r\n        if(count > 0){\r\n            window.alert(\"Schedule is clashing\"); \r\n            return;\r\n        }\r\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\",\r\n            {params:{name: curr.name, date:curr.date, start: curr.start,\r\n                end: curr.end, task: curr.task}}\r\n        ).then((response)=>{\r\n            window.location.reload();\r\n        });\r\n    }\r\n    hide = () => {\r\n        let element = document.getElementById(\"Form\");\r\n        element.classList.remove(\"visibleForm\");\r\n        element.classList.add(\"hiddenForm\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Form\" className=\"hiddenForm\">\r\n                <h1 className=\"m0\">Add Details</h1>\r\n                <p className=\"m0\">Enter teacher's name</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ name: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"text\"\r\n                        placeholder=\"Tony Stark\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Date</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ date: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"date\"\r\n                        placeholder=\"Month-Day\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Start Time</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ start: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"time\"\r\n                        placeholder=\"02:00\"\r\n                        \r\n                    />\r\n                </div>\r\n                <p className=\"m0\">End Time</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ end: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"time\"\r\n                        placeholder=\"03:00\"\r\n                    />\r\n                </div>\r\n                <p className=\"m0\">Task</p>\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            this.setState({ task: e.target.value });\r\n                        }}\r\n                        className=\"w m0\"\r\n                        type=\"text\"\r\n                        placeholder=\"Subject\"\r\n                    />\r\n                </div>\r\n                <div className=\"formButtons\">\r\n                    <button className=\"formButton\" onClick={() => this.send()}>\r\n                        Add Schedule\r\n                    </button>\r\n                    <button\r\n                        className=\"formButton\"\r\n                        onClick={()=> this.hide()}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newStart: \"\",\r\n            newTask: \"\",\r\n        };\r\n    }\r\n    hide = () => {\r\n        var element = document.getElementById(\"UpdForm\");\r\n        element.classList.remove(\"visibleUpd\");\r\n        element.classList.add(\"hiddenUpd\");\r\n    };\r\n    send = (operation) => {\r\n        let curr = this.state;\r\n        let props = this.props;\r\n        // console.log(curr.start,props.start);\r\n        // if (curr.start.parseInt >= curr.end.parseInt) {\r\n        //     window.alert(\"Invalid Start and End Time\");\r\n        //     return;\r\n        // }\r\n        function getCount() {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/check\",\r\n                    {\r\n                        params: {\r\n                            name: props.str,\r\n                            starttime: curr.newStart,\r\n                            endtime: props.end,\r\n                        },\r\n                    }\r\n                ).then(async (response) => {\r\n                    resolve(response.data);\r\n                }).catch((err) => console.log(err));\r\n            });\r\n        }\r\n        let count = getCount();\r\n        if (count > 0) {\r\n            window.alert(\"Schedule is clashing\");\r\n            return;\r\n        }\r\n        if (operation === \"u\") {\r\n            // console.log(props.name,\"2021-06-\" + props.date,props.start,curr.newStart,props.end,props.task,curr.newTask);\r\n            // function updateData(){\r\n\r\n            //         return new Promise(async (resolve) => {\r\n            //             await Axios.put(\r\n            //                 \"https://schedule-calender.herokuapp.com/update\",\r\n            //                 {\r\n            //                     params: {\r\n            //                         name: props.name,\r\n            //                         date: \"2021-06-\" + props.date,\r\n            //                         start: props.start,\r\n            //                         newStart: curr.newStart,\r\n            //                         end: props.end,\r\n            //                         task: props.task,\r\n            //                         newTask: curr.newTask,  \r\n            //                     },\r\n            //                 }\r\n            //             ).then(async (response) => {\r\n            //                     let temp = resolve(response.data);\r\n            //                     console.log(temp);\r\n            //                 })\r\n            //                 .catch((err) => console.log(err));\r\n            //         });\r\n            // }\r\n            // updateData()\r\n            Axios.put(\r\n                \"https://schedule-calender.herokuapp.com/update\", //update\r\n                {\r\n                    params: {\r\n                        name: props.name,\r\n                        date: \"2021-06-\" + props.date,\r\n                        start: props.start,\r\n                        newStart: curr.newStart,\r\n                        end: props.end,\r\n                        task: props.task,\r\n                        newTask: curr.task,\r\n                    }\r\n                }\r\n            ).then((response) => {\r\n                console.log(response);\r\n                //window.location.reload();\r\n            });\r\n        } else {\r\n            console.log(\"del\");\r\n            function deleteData(){\r\n                return new Promise(async (resolve) => {\r\n                    await Axios.delete(\r\n                        \"https://schedule-calender.herokuapp.com/delete\",\r\n                        {\r\n                            params: {\r\n                                name: props.name,\r\n                                date: \"2021-06-\" + props.date,\r\n                                start: props.start,\r\n                            },\r\n                        }\r\n                    ).then(async (response) => {\r\n                        resolve(response.data);\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n                });\r\n        }\r\n        deleteData();\r\n            // await Axios.delete(\r\n            //     \"https://schedule-calender.herokuapp.com/delete\", //delete\r\n            //     {\r\n            //         params: {\r\n            //             name: props.name,\r\n            //             date: \"2021-06-\" + props.date,\r\n            //             start: props.start,\r\n            //         },\r\n            //     }\r\n            // ).then((response) => {\r\n            //     console.log(response);\r\n            //     // window.location.reload();\r\n            // });\r\n        }\r\n    };\r\n    render() {\r\n        // let curr = this.state;\r\n        let props = this.props;\r\n        return (\r\n            <div>\r\n                <div id=\"UpdForm\" className=\"hiddenUpd\">\r\n                    <h1 className=\"m0\">Update Details</h1>\r\n                    <p className=\"m0\">Start Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState(\r\n                                    { newStart: e.target.value },\r\n                                    () => {\r\n                                        console.log(e.target.value);\r\n                                    }\r\n                                );\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder={props.start}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">End Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ end: e.target.value }, () => {\r\n                                    console.log(e.target.value);\r\n                                });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder={props.end}\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">Task</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState(\r\n                                    { newTask: e.target.value },\r\n                                    () => {\r\n                                        console.log(e.target.value);\r\n                                    }\r\n                                );\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"text\"\r\n                            placeholder={props.task}\r\n                        />\r\n                    </div>\r\n                    <div className=\"formButtons\">\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"u\")}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.send(\"d\")}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={() => this.hide()}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateForm;\r\n\r\n\r\n// Select * from teachers where name='hareesh' AND date LIKE '2021-06-22%' AND starttime LIKE '02:00%';\r\n\r\n//update teachers set starttime='09:00', endtime='10:00', task='DSA' WHERE name='hareesh' AND task='hindi' \r\n\r\n//SET SQL_SAFE_UPDATES = 0;","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\nimport UpdateForm from \"./UpdateForm\";\r\n\r\nclass Day extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: [],\r\n            date: \"0\",\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.date + \"\" === \"\") return {};\r\n        return { date: props.date + \"\" };\r\n    }\r\n    shouldComponentUpdate(props) {\r\n        if (props.view !== \"Day\" || props.date + \"\" === \"\") return false;\r\n        return true;\r\n    }\r\n    makeVisible = (e) => {\r\n        let element = document.getElementById(\"UpdForm\");\r\n        element.classList.add(\"visibleUpd\");\r\n        element.classList.remove(\"hiddenUpd\");\r\n    };\r\n    componentDidUpdate(props) {\r\n        if (props.date + \"\" === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    detailsForUpdate= (obj) =>{\r\n        this.setState({start: obj.starttime.substring(0, 5),\r\n            end: obj.endtime.substring(0, 5), task: obj.task});\r\n    }\r\n    async getData() {\r\n        const str = this.props.str;\r\n        let date = this.state.date;\r\n        date = \"2021-06-\" + (date.length === 1 ? \"0\" + date : date);\r\n        let dbdata = [];\r\n        function getName(str) {\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/data\",\r\n                    {\r\n                        params: { name: str, date: date },\r\n                    }\r\n                ).then(async (response) => {\r\n                    let data = response.data;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        dbdata.push(data[i]);\r\n                    }\r\n                    resolve(dbdata);\r\n                });\r\n            });\r\n        }\r\n        let data = await getName(str);\r\n        this.setState({ show: data, date: \"2021-06-\" });\r\n    }\r\n    render() {\r\n        const curr = this.state;\r\n        const props = this.props;\r\n        return (\r\n            <div className=\"dayResults\">\r\n            <UpdateForm name={props.str} start={curr.start} task={curr.task}\r\n            date={curr.date} end={curr.end} />\r\n                <br />\r\n                {curr.show.map((obj, ind) => (\r\n                    <div className=\"data\" key={ind} \r\n                    onClick={()=>this.detailsForUpdate(obj)}>  \r\n                        <div className=\"range\">\r\n                            {obj.starttime.substring(0, 5)} -\r\n                            {obj.endtime.substring(0, 5)}\r\n                        </div>\r\n                        <div className=\"task\">{obj.task}</div>\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n}\r\n\r\nexport default Day;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nimport \"./App.css\";\r\n\r\nclass Week extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            weekDays: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THURS\", \"FRI\", \"SAT\"],\r\n            show: [],\r\n            startDay: -1,\r\n            date: 0,\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.date + \"\" === \"\") return {};\r\n        return { date: props.date };\r\n    }\r\n    shouldComponentUpdate(props) {\r\n        if (props.view !== \"Week\" || props.date + \"\" === \"\") return false;\r\n        return true;\r\n    }\r\n    detailsForUpdate = (obj) => {\r\n        this.setState({\r\n            start: obj.starttime.substring(0, 5),\r\n            end: obj.endtime.substring(0, 5),\r\n            task: obj.task,\r\n        });\r\n    };\r\n    componentDidUpdate(props) {\r\n        if (props.date === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        const curr = this.state;\r\n        const name = this.props.str;\r\n        const weekStart = curr.startDay + curr.date * 7;\r\n        let dbdata = [];\r\n        function weekInfo(str, day) {\r\n            return new Promise(async (resolve) => {\r\n                if (day < 1 || day > 30) {\r\n                    resolve([]);\r\n                }\r\n                day = day + \"\";\r\n                let date = \"2021-06-\" + (day.length === 1 ? \"0\" + day : day);\r\n                await Axios.get(\r\n                    \"https://schedule-calender.herokuapp.com/data\",\r\n                    {\r\n                        params: { name: str, date: date },\r\n                    }\r\n                ).then(async (response) => {\r\n                    let currday = response.data;\r\n                    resolve(currday);\r\n                });\r\n            });\r\n        }\r\n        for (let i = weekStart; i < weekStart + 7; i++) {\r\n            let daydata = await weekInfo(name, i);\r\n            dbdata.push(daydata);\r\n        }\r\n        this.setState({ show: dbdata });\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        const curr = this.state;\r\n        let i = 0;\r\n        return (\r\n            <div className=\"WeekParent\">\r\n                <UpdateForm\r\n                    name={props.str}\r\n                    start={curr.start}\r\n                    task={curr.task}\r\n                    date={curr.date}\r\n                    end={curr.end}\r\n                />\r\n                {curr.show.map((day, ind) => (\r\n                    <div className=\"WeekDayParent\" key={ind}>\r\n                        <div\r\n                            key={ind}\r\n                            className={\r\n                                i === 0 || i === 6 ? \"Wday Wend\" : \"Wday\"\r\n                            }\r\n                        >\r\n                            {curr.weekDays[i++]}\r\n                        </div>\r\n\r\n                        <div className=\"data data-week\" key={ind + \"d\"}>\r\n                            {day.map((obj, index) =>\r\n                                obj.task === undefined ? (\r\n                                    <React.Fragment />\r\n                                ) : (\r\n                                    <div\r\n                                        className=\"dataContainer\"\r\n                                        key={index + \"\" + { ind }}\r\n                                        onClick={() =>\r\n                                            this.detailsForUpdate(obj)\r\n                                        }\r\n                                    >\r\n                                        <div\r\n                                            className=\"range\"\r\n                                            key={index + \"r\"}\r\n                                        >\r\n                                            {obj.starttime.substring(0, 5)} -\r\n                                            {obj.endtime.substring(0, 5)}\r\n                                        </div>\r\n                                        <div className=\"task\" key={index + \"t\"}>\r\n                                            {obj.task}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n}\r\n\r\nexport default Week;\r\n","import React, { Component } from 'react'; \r\nimport Axios from \"axios\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nimport \"./DisplayTeacher.css\";\r\nimport \"./App.css\";\r\n\r\nclass Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            show: [],\r\n        }\r\n    }\r\n    shouldComponentUpdate(props){\r\n        if(props.view !== \"Month\") return false;\r\n        return true;\r\n    }\r\n    detailsForUpdate= (obj,day) =>{\r\n        this.setState({start: obj.starttime.substring(0, 5),\r\n            end: obj.endtime.substring(0, 5), task: obj.task});\r\n    }\r\n    componentDidUpdate(props){\r\n        if(props.date === this.state.date) return;\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        const name = this.props.str;\r\n        let dbdata = [];\r\n        function monthInfo(str,day) {\r\n            let daydata= [];\r\n            return new Promise(async (resolve) => {\r\n                day= day+\"\";\r\n                let date= \"2021-06-\" + (day.length === 1 ? \"0\" + day : day);\r\n                daydata.push(date);\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/data\", {\r\n                    params: {name : str, date : date},\r\n                }).then(async (response) => {\r\n                    let currday= response.data;\r\n                    for (let i = 0; i < currday.length; i++) {\r\n                        daydata.push(currday[i]);\r\n                    }\r\n                    resolve(daydata);\r\n                });\r\n            });\r\n        }\r\n        for(let i=1; i<=30; i++){\r\n            let daydata= await monthInfo(name,i);\r\n            dbdata.push(daydata);\r\n        }\r\n        this.setState({show : dbdata});\r\n    }\r\n    render() {\r\n        let days= [];\r\n        const curr= this.state;\r\n        const props= this.props;\r\n        let show= this.state.show;\r\n        for(let i=1; i<=30; i++){\r\n           days.push(\"June \"+ i);\r\n        }\r\n        return (\r\n            <div className=\"teacherParent\">\r\n            <UpdateForm name={props.str} start={curr.start} task={curr.task}\r\n            date={curr.date} end={curr.end} />\r\n                {\r\n                    show.map((day,ind)=>(\r\n                        <div key={\"md\"+ind} className=\"teacherContainer\">\r\n                            <div className=\"bigText\" key={ind+\"t\"}>\r\n                                <h2 key={\"monthday\"+ind}>{days[ind]}</h2>\r\n                            </div>\r\n                            <div className= \"data\" key={ind+\"d\"}>\r\n                            {\r\n                                day.map((obj,index)=>(\r\n                                obj.task===undefined ? (<React.Fragment/>) :\r\n                                (\r\n                                    <div key= {\"m\"+index}\r\n                                    onClick={()=>this.detailsForUpdate(obj,day)}>\r\n                                        <div className=\"range\" key={index+\"r\"}>\r\n                                            {obj.starttime.substring(0, 5)} -\r\n                                            {obj.endtime.substring(0, 5)}\r\n                                        </div>\r\n                                        <div className=\"task\" key={index+\"t\"}>\r\n                                            {obj.task}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                                ))\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n}\r\n\r\nexport default Month\r\n","import React, { Component } from 'react'\r\nimport \"./DisplayTeacher.css\"\r\nimport Axios from \"axios\";\r\n\r\nclass AddData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            start: \"\",\r\n            end: \"\",\r\n            task: \"\",\r\n        }\r\n    }\r\n    makeVisible = (e) => {\r\n        let element = document.getElementById(\"Form\");\r\n        element.classList.add(\"visibleForm\");\r\n        element.classList.remove(\"hiddenForm\");\r\n    } \r\n    hide = () => {\r\n        let element = document.getElementById(\"Form\");\r\n        element.classList.remove(\"visibleForm\");\r\n        element.classList.add(\"hiddenForm\");\r\n    }\r\n    send = () => {\r\n        let curr= this.state;\r\n        let props= this.props;\r\n        if((curr.start).parseInt >= (curr.end).parseInt){\r\n            window.alert(\"Invalid Start and End Time\");\r\n            return;\r\n        }\r\n        function getCount(){\r\n            return new Promise(async (resolve) => {\r\n                await Axios.get(\"https://schedule-calender.herokuapp.com/check\", {\r\n                    params:{name: props.str ,starttime : curr.start,endtime : curr.end},\r\n                }).then(async (response) => {\r\n                    resolve(response.data);\r\n                }).catch((err)=>console.log(err));\r\n            })\r\n        }\r\n        let count = getCount();\r\n        if(count > 0){\r\n            window.alert(\"Schedule is clashing\"); \r\n            return;\r\n        }\r\n        Axios.post(\"https://schedule-calender.herokuapp.com/insert\",\r\n            {params:{name: props.str, date: \"2021-06-\"+props.date, start: curr.start,\r\n                end: curr.end, task: curr.task}}\r\n        ).then((response)=>{\r\n            window.location.reload();\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div id=\"Form\" className=\"hiddenForm\">\r\n                    <h1 className=\"m0\">Add Details</h1> \r\n                    <p className=\"m0\">Start Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ start: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"02:00\"\r\n                            \r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">End Time</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ end: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"time\"\r\n                            placeholder=\"03:00\"\r\n                        />\r\n                    </div>\r\n                    <p className=\"m0\">Task</p>\r\n                    <div>\r\n                        <input\r\n                            onChange={(e) => {\r\n                                this.setState({ task: e.target.value });\r\n                            }}\r\n                            className=\"w m0\"\r\n                            type=\"text\"\r\n                            placeholder=\"Subject\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"formButtons\">\r\n                        <button className=\"formButton\" onClick={() => this.send()}>\r\n                            Add Schedule\r\n                        </button>\r\n                        <button\r\n                            className=\"formButton\"\r\n                            onClick={()=> this.hide()}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                className=\"createInside\"\r\n                onClick={() => this.makeVisible()}\r\n                >\r\n                <img alt=\"add\"\r\n                src=\"https://www.gstatic.com/images/icons/material/colored_icons/1x/create_32dp.png\"\r\n                />\r\n                <p>CREATE</p>\r\n            </button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddData\r\n\r\n","import Day from \"./Day\";\r\nimport Week from \"./Week\";\r\nimport Month from \"./Month\";\r\nimport AddData from \"./AddData\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Topbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            view: \"Day\",\r\n            date: 1,\r\n        };\r\n    }\r\n    changeView = (e) => {\r\n        let ele= document.getElementById(\"mi\");\r\n        if(e.target.value === \"Month\"){\r\n            ele.style.display= \"none\";\r\n        }else ele.style.display= \"block\";\r\n        this.setState({view: e.target.value});\r\n    }\r\n    changeVal = (e) => {\r\n        if(this.state.view===\"Week\" && \r\n        (e.target.value < 0 || e.target.value > 5)) return;\r\n        if(e.target.value < 0 || e.target.value > 30) return;\r\n        this.setState({date: e.target.value});\r\n    }\r\n    render() {\r\n        const curr = this.state;\r\n        let max= 30;\r\n        let view = <Day str={this.props.str} date={curr.date} view={curr.view}/>;\r\n        if (curr.view === \"Week\") {\r\n            view = <Week str={this.props.str} date={curr.date} view={curr.view}/>;\r\n            max= 5;\r\n        } else if (curr.view === \"Month\") {\r\n            view = <Month str={this.props.str}  view={curr.view}/>;\r\n        }\r\n        return this.props.enter ? (\r\n            <React.Fragment>\r\n                <div className=\"header2\">\r\n                    <button className=\"back\" onClick={this.props.back}>\r\n                        <i className=\"fas fa-caret-left backpadding\"></i>BACK\r\n                    </button>\r\n                    <input\r\n                        onChange={(e) => this.changeVal(e)}\r\n                        type=\"number\"\r\n                        id=\"mi\"\r\n                        value= {curr.date}\r\n                        min= {0}\r\n                        max= {max}\r\n                        className=\"midInput\"\r\n                    />\r\n                    <select\r\n                        className=\"viewType\"\r\n                        onChange={(e)=>this.changeView(e)}\r\n                    >\r\n                        <option type=\"1\"> Day </option>\r\n                        <option type=\"2\"> Week </option>\r\n                        <option type=\"3\"> Month </option>\r\n                    </select>\r\n                </div>\r\n                {view}\r\n                <AddData date={curr.date}  str={this.props.str}/>\r\n            </React.Fragment>\r\n        ) : (\r\n            <div className=\"header\"  id=\"head\">\r\n                <div className=\"headerFont\">\r\n                    <div className=\"oneLine\">\r\n                        <input\r\n                            id= \"search \"\r\n                            placeholder=\"🔎 Search Teacher\"\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            onChange={(e) => this.props.textChange(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nimport Topbar from \"./Topbar\";\nimport \"./DisplayTeacher.css\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: [],\n            display: \"\",\n            enter: false,\n            chosen: \"\",\n        };\n        this.getData = this.getData.bind(this);\n    }\n    textChange = (e) => {\n        this.setState({ display: e.target.value }, () => {\n            this.getData();\n        });\n    };\n    back = () => {\n        window.location.reload();\n    };\n    makeVisible = (e) => {\n        let element = document.getElementById(\"Form\");\n        element.classList.add(\"visibleForm\");\n        element.classList.remove(\"hiddenForm\");\n    };\n    enterTeacher = (e) => {\n        this.setState({ enter: true, chosen: e.target.id });\n    };\n    async getData() {\n        let name = this.state.display;\n        let dbdata = [];\n        function getName(str) {\n            return new Promise(async (resolve) => {\n                await Axios.get(\n                    \"https://schedule-calender.herokuapp.com/search\",\n                    {\n                        params: { name: str },\n                    }\n                ).then(async (response) => {\n                    for (let i = 0; i < response.data.length; i++) {\n                        let profiledata = await personData(response.data[i].name);\n                        dbdata.push(profiledata);\n                    }\n                    resolve(dbdata);\n                });\n            });\n        }\n        const personData = (useName) => {\n            return new Promise(async (resolve) => {\n                let profiledata = [];\n                profiledata.push(useName);\n                await Axios.get(\n                    \"https://schedule-calender.herokuapp.com/profile\",\n                    {\n                        params: { name: useName },\n                    }\n                ).then((res) => {\n                    const data = res.data;\n                    for (let i = 0; i < data.length; i++) {\n                        profiledata.push(data[i]);\n                    }\n                    resolve(profiledata);\n                });\n            });\n        };\n        let data = await getName(name);\n        this.setState({ show: data });\n    }\n    render() {\n        let curr = this.state;\n        let names = [];\n        for (let i = 0; i < curr.show.length; i++)\n            names.push(curr.show[i].shift());\n        let k = 0;\n        if (curr.enter) {\n            return (\n                <div>\n                    <Topbar\n                        textChange={this.textChange}\n                        back={() => this.back()}\n                        enter={curr.enter}\n                        str={curr.chosen}\n                    />\n                </div>\n            );\n        }\n        return (\n            <div className= \"body\">\n                <Topbar textChange={this.textChange} enter={curr.enter} />\n                <div className=\"teacherParent\" id=\"parent\">\n                    {curr.show.map((data, index) => (\n                        <div\n                            className=\"teacherContainer\"\n                            key={index+\"tc\"} id={index+\"tc\"}\n                            onClick={this.enterTeacher}\n                        >\n                            <div className=\"bigText\" key={index}>\n                                <h2 id={names[k]}>{names[k++]}</h2>\n                            </div>\n                            {data.map((obj, index) => (\n                                <div\n                                    className=\"data\"\n                                    key={index}\n                                    id={names[k - 1]}\n                                >\n                                    <div className=\"date\" id={names[k - 1]}>\n                                        {obj.date.substring(5, 10)}\n                                    </div>\n                                    <div className=\"range\" id={names[k - 1]}>\n                                        {obj.starttime.substring(0, 5)} -\n                                        {obj.endtime.substring(0, 5)}\n                                    </div>\n                                    <div className=\"task\" id={names[k - 1]}>\n                                        {obj.task}\n                                    </div>\n                                </div>\n                            ))}\n                            <div className=\"needPading\"></div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"create\">\n                    <Form str={curr.display} />\n                    <button\n                        className=\"createInside\"\n                        onClick={(e) => this.makeVisible(e)}\n                    >\n                        <img\n                            alt=\"add\"\n                            src=\"https://www.gstatic.com/images/icons/material/colored_icons/1x/create_32dp.png\"\n                        />\n                        <p>CREATE</p>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getData();\n        // this.eventListener();\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\nexport default reportWebVitals;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}